name: Generate Self-Signed PFX Certificate

on:
  workflow_dispatch: # Allows manual triggering from GitHub UI

env:
  # Define environment variables for your certificate details
  CERT_FRIENDLY_NAME: "IIS-Key-Vault" # The friendly name for your certificate
  CERT_COMMON_NAME: "IIS-Key-Vault"  # The Common Name (CN) / primary DNS name for the cert
  CERT_VALIDITY_DAYS: "30"               # How long the certificate will be valid (in days)

jobs:
  generate_pfx:
    runs-on: windows-latest # Use a Windows runner as New-SelfSignedCertificate is a Windows PowerShell cmdlet

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate Self-Signed Certificate and Export PFX
        id: generate_cert_pfx # ADDED: Assign an ID to this step to capture its output
        shell: pwsh
        run: |
          $certFriendlyName = "${{ env.CERT_FRIENDLY_NAME }}"
          $certCommonName = "${{ env.CERT_COMMON_NAME }}"
          $validityDays = ${{ env.CERT_VALIDITY_DAYS }}

          $pfxPassword = ConvertTo-SecureString -String "${{ secrets.PFX_PASSWORD }}" -Force -AsPlainText
          
          Write-Host "Generating self-signed certificate with Friendly Name: '$certFriendlyName' and Common Name: '$certCommonName'..."

          $cert = New-SelfSignedCertificate `
              -DnsName $certCommonName `
              -CertStoreLocation "Cert:\CurrentUser\My" `
              -FriendlyName $certFriendlyName `
              -NotAfter (Get-Date).AddDays($validityDays) `
              -KeyUsage DigitalSignature, KeyEncipherment `
              -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.1,1.3.6.1.5.5.7.3.2", "2.5.29.19={text}CA=FALSE") `
              -ErrorAction Stop

          Write-Host "Certificate generated successfully. Thumbprint: $($cert.Thumbprint)"

          $pfxPath = "C:\temp\$($certFriendlyName).pfx"
          
          if (-not (Test-Path -Path (Split-Path $pfxPath) -PathType Container)) {
              New-Item -Path (Split-Path $pfxPath) -ItemType Directory -Force
          }

          Export-PfxCertificate -Cert $cert -FilePath $pfxPath -Password $pfxPassword -ErrorAction Stop

          Write-Host "PFX file exported to: $pfxPath"
          Write-Host "Certificate creation and export process complete. The .pfx file is located on the runner."
          Write-Host "It will be discarded when the job finishes, as per your request."

          # ADDED: Output the PFX path so it can be used by subsequent steps/actions
          echo "pfx_file_path=$pfxPath" >> $env:GITHUB_OUTPUT

      - name: Upload PFX as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.CERT_FRIENDLY_NAME }}-pfx
          # CORRECTED: Refer to the output from the previous step
          path: ${{ steps.generate_cert_pfx.outputs.pfx_file_path }} 
          retention-days: 1
